name: Release Go Binaries

on:
  release:
    types: [created]

permissions:
  contents: write  # This gives the workflow permission to create releases and upload assets


jobs:
  # Build for standard desktop platforms
  build-desktop:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            output_name: agent_linux_amd64
            asset_name: agent_linux_amd64
          - os: windows-latest
            output_name: agent_windows_amd64.exe
            asset_name: agent_windows_amd64.exe
          - os: macos-latest
            output_name: agent_darwin_amd64
            asset_name: agent_darwin_amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Build
        run: go build -v -o ${{ matrix.output_name }} .

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: ./${{ matrix.output_name }}
          token: ${{ secrets.GITHUB_TOKEN }}

  # Build for macOS ARM (Apple Silicon)
  build-mac-arm:
    name: Build for macOS ARM
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Build
        env:
          GOOS: darwin
          GOARCH: arm64
        run: go build -v -o agent_darwin_arm64 .

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: ./agent_darwin_arm64
          token: ${{ secrets.GITHUB_TOKEN }}

  # Build for Linux ARM
  build-linux-arm:
    name: Build for Linux ARM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Build for ARM64
        env:
          GOOS: linux
          GOARCH: arm64
        run: go build -v -o agent_linux_arm64 .

      - name: Build for ARM v7
        env:
          GOOS: linux
          GOARCH: arm
          GOARM: 7
        run: go build -v -o agent_linux_armv7 .

      - name: Upload ARM64 Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: ./agent_linux_arm64
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload ARMv7 Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: ./agent_linux_armv7
          token: ${{ secrets.GITHUB_TOKEN }}

  # Build for Android
  build-android:
    name: Build for Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Build for Android ARM64
        env:
          GOOS: android
          GOARCH: arm64
        run: go build -v -o agent_android_arm64 .

      - name: Upload Android ARM64 Binary
        uses: softprops/action-gh-release@v1
        with:
          files: ./agent_android_arm64
          token: ${{ secrets.GITHUB_TOKEN }}

  # Build for iOS
  build-ios:
    name: Build for iOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true
      - name: Install gomobile
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init

      - name: Build for iOS ARM64 using gomobile
        run: gomobile build -target=ios -o agent_ios_arm64 -bundleid=com.jmuindi.agent .


      - name: Upload iOS ARM64 Binary
        uses: softprops/action-gh-release@v1
        with:
          files: ./agent_ios_arm64
          token: ${{ secrets.GITHUB_TOKEN }}